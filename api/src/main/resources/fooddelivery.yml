openapi: "3.0.3"
info:
  description: This is a simple API
  version: 1.0.0
  title: Simple food api
tags:
  - name: food-controller
    description: the foodservice API
  - name: order-controller
    description: the orderservice API
paths:
  /orderservice/orders/{orderId}:
    get:
      tags:
        - order-controller
      summary: Find purchase order by ID
      operationId: getOrderById
      parameters:
        - name: orderId
          in: path
          description: ID of order that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderModel'
        '403':
          description: The order exists but does not belong to the authenticated customer
        '404':
          description: The order does not exist
  /orderservice/orders:
    post:
      tags:
        - order-controller
      summary: The created order from the cart
      description: Place a new order in the store
      operationId: createOrder
      requestBody:
        description: Cart to place an order
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartModel'
      responses:
        '201':
          description: Created order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderModel'
        '400':
          description: The Cart is empty
    get:
      tags:
        - order-controller
      summary: List of authenticated customer's orders
      description: List of authenticated customer's orders
      operationId: listAllOrders
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderModel'
  /foodservice/foods:
    get:
      tags:
        - food-controller
      summary: List of all foods
      description: List of all foods
      operationId: listAllFoods
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FoodModel'
components:
  schemas:
    FoodModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Pizza
        calorie:
          type: number
          format: double
          example: 201.16
        description:
          type: string
          example: Italian food
        price:
          type: number
          format: double
          example: 7.13
        category:
          type: string
      xml:
        name: food
    OrderModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        price:
          type: number
          format: double
          example: 7.13
        timestampCreated:
          type: string
          format: date
        orderItemModels:
          type: array
          xml:
            name: orderItemModels
            wrapped: true
          items:
            $ref: '#/components/schemas/OrderItemModel'
      xml:
        name: order
    OrderItemModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        pieces:
          type: integer
          example: 198772
        price:
          type: number
          format: double
          example: 7.13
        foodModel:
          $ref: '#/components/schemas/FoodModel'
      xml:
        name: orderItemModel
    CartModel:
      type: object
      properties:
        price:
          type: number
          format: double
          example: 10.21
        orderItemModels:
          type: array
          xml:
            name: orderItemModels
            wrapped: true
          items:
            $ref: '#/components/schemas/OrderItemModel'
      xml:
        name: cartModel